@model OpenSchool.Models.UsuariosRoles

@{
    ViewBag.Title = "CrearAdministrador";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-lg-12">
        <div class="card">
            <div class="card-header d-flex align-items-center">
                <h4>Asignar Coordinador</h4>
            </div>
            <div class="card-body">
                <div class="form-group">

                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuarios.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuarios.Nombre, new { @type = "text", @Placeholder = "Nombre", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Usuarios.Nombre)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuarios.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuarios.Apellido, new { @type = "text", @Placeholder = "Apellido", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Usuarios.Apellido)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuarios.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuarios.Email, new { @type = "email", @Placeholder = "Mail", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Usuarios.Email)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuarios.Contrasenha, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuarios.Contrasenha, new { @type = "password", @Placeholder = "Contraseña", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Usuarios.Contrasenha)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuarios.Salt, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuarios.Salt, new { @type = "text", @Placeholder = "Salt", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Usuarios.Salt)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuarios.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuarios.FechaNacimiento, new { @class = "form-control", @id = "FechaNacimiento" })
                            @Html.ValidationMessageFor(model => model.Usuarios.FechaNacimiento)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuarios.FechaRegistro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuarios.FechaRegistro)
                            @Html.ValidationMessageFor(model => model.Usuarios.FechaRegistro)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdRol, "Roles", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBox("IdRol", (MultiSelectList)ViewBag.Roles, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdRol, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<script>
    window.onload = function () {
        
        $('#IdRol').selectize({
            delimiter: ',',
            persist: false,
            create: function (input) {
                return {
                    value: input,
                    text: input,
                    maxItems: 2
                }
            }
        });//funciones a ejecutar
        $('#Usuarios_FechaNacimiento').datetimepicker({
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-chevron-up",
                down: "fa fa-chevron-down",
                previous: 'fa fa-chevron-left',
                next: 'fa fa-chevron-right',
                today: 'fa fa-screenshot',
                clear: 'fa fa-trash',
                close: 'fa fa-remove'
            }, maxDate: moment()

        }); 
    };
</script>